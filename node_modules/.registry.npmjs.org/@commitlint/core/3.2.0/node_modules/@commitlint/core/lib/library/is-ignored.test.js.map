{"version":3,"sources":["../../src/library/is-ignored.test.js"],"names":["t","false","true"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DA,GAAEC,KAAF,CAAQ,0BAAR;AACA,CAFD;;AAIA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DD,GAAEC,KAAF,CAAQ,yBAAU,EAAV,CAAR;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDD,GAAEC,KAAF,CAAQ,yBAAU,gBAAV,CAAR;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDD,GAAEE,IAAF,CAAO,yBAAU,sBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,mCAAL,EAA0C,aAAK;AAC9CF,GAAEE,IAAF,CAAO,yBAAU,yBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDF,GAAEE,IAAF,CACC,yBACE,qIADF,CADD;AAKAF,GAAEE,IAAF,CACC,yBACE,qIADF,CADD;AAKA,CAXD;;AAaA,mBAAK,4CAAL,EAAmD,aAAK;AACvDF,GAAEE,IAAF,CAAO,yBAAW,OAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,OAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,OAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,aAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,sBAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,SAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,WAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,eAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,iBAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,wBAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,0BAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,eAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,QAAX,CAAP;AACAF,GAAEE,IAAF,CAAO,yBAAW,SAAX,CAAP;AACA,CAfD;;AAiBA,mBAAK,kCAAL,EAAyC,aAAK;AAC7CF,GAAEE,IAAF,CAAO,yBAAU,uBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,mCAAL,EAA0C,aAAK;AAC9CF,GAAEE,IAAF,CAAO,yBAAU,wBAAV,CAAP;AACA,CAFD","file":"is-ignored.test.js","sourcesContent":["import test from 'ava';\nimport isIgnored from './is-ignored';\n\ntest('should return false when called without arguments', t => {\n\tt.false(isIgnored());\n});\n\ntest('should return false when called with empty string', t => {\n\tt.false(isIgnored(''));\n});\n\ntest('should return false for normal commit', t => {\n\tt.false(isIgnored('initial commit'));\n});\n\ntest('should return false for branch merges', t => {\n\tt.true(isIgnored(\"Merge branch 'iss53'\"));\n});\n\ntest('should return true for merged PRs', t => {\n\tt.true(isIgnored('Merge pull request #369'));\n});\n\ntest('should return true for revert commits', t => {\n\tt.true(\n\t\tisIgnored(\n\t\t\t`Revert \"docs: add recipe for linting of all commits in a PR (#36)\"\\n\\nThis reverts commit 1e69d542c16c2a32acfd139e32efa07a45f19111.`\n\t\t)\n\t);\n\tt.true(\n\t\tisIgnored(\n\t\t\t`revert \"docs: add recipe for linting of all commits in a PR (#36)\"\\n\\nThis reverts commit 1e69d542c16c2a32acfd139e32efa07a45f19111.`\n\t\t)\n\t);\n});\n\ntest('should return true for npm version commits', t => {\n\tt.true(isIgnored(`0.0.1`));\n\tt.true(isIgnored(`0.1.0`));\n\tt.true(isIgnored(`1.0.0`));\n\tt.true(isIgnored(`0.0.1-alpha`));\n\tt.true(isIgnored(`0.0.1-some-crazy-tag`));\n\tt.true(isIgnored(`0.0.1-0`));\n\tt.true(isIgnored(`0.0.1-999`));\n\tt.true(isIgnored(`0.0.1-alpha.0`));\n\tt.true(isIgnored(`0.0.1-alpha.999`));\n\tt.true(isIgnored(`0.0.1-some-crazy-tag.0`));\n\tt.true(isIgnored(`0.0.1-some-crazy-tag.999`));\n\tt.true(isIgnored(`0.0.1-1e69d54`));\n\tt.true(isIgnored(`v0.0.1`));\n\tt.true(isIgnored(` v3.0.0`));\n});\n\ntest('should return true fixup commits', t => {\n\tt.true(isIgnored('fixup! initial commit'));\n});\n\ntest('should return true squash commits', t => {\n\tt.true(isIgnored('squash! initial commit'));\n});\n"]}