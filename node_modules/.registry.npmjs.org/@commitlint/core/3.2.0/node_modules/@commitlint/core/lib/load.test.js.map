{"version":3,"sources":["../src/load.test.js"],"names":["cwd","process","afterEach","always","t","context","back","chdir","actual","deepEqual","rules","foo","is","parserPreset","name","opts","parserOpts","headerPattern","throws","extends","zero","one","two","b","baz","legacy","target","to","resolve","split","join","sep"],"mappings":"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","file":"load.test.js","sourcesContent":["import path from 'path';\nimport test from 'ava';\n\nimport load from './load';\n\nconst cwd = process.cwd();\n\ntest.afterEach.always(t => {\n\tt.context.back();\n});\n\ntest('extends-empty should have no rules', async t => {\n\tt.context.back = chdir('fixtures/extends-empty');\n\tconst actual = await load();\n\tt.deepEqual(actual.rules, {});\n});\n\ntest('uses seed as configured', async t => {\n\tt.context.back = chdir('fixtures/extends-empty');\n\tconst actual = await load({rules: {foo: 'bar'}});\n\tt.is(actual.rules.foo, 'bar');\n});\n\ntest('uses seed with parserPreset', async t => {\n\tt.context.back = chdir('fixtures/parser-preset');\n\n\tconst {parserPreset: actual} = await load({parserPreset: './conventional-changelog-custom'});\n\tt.is(actual.name, './conventional-changelog-custom');\n\tt.deepEqual(actual.opts, {\n\t\tparserOpts: {\n\t\t\theaderPattern: /^(\\w*)(?:\\((.*)\\))?-(.*)$/\n\t\t}\n\t});\n});\n\ntest('invalid extend should throw', t => {\n\tt.context.back = chdir('fixtures/extends-invalid');\n\tt.throws(load());\n});\n\ntest('empty file should have no rules', async t => {\n\tt.context.back = chdir('fixtures/empty-object-file');\n\tconst actual = await load();\n\tt.deepEqual(actual.rules, {});\n});\n\ntest('empty file should extend nothing', async t => {\n\tt.context.back = chdir('fixtures/empty-file');\n\tconst actual = await load();\n\tt.deepEqual(actual.extends, []);\n});\n\ntest('recursive extends', async t => {\n\tt.context.back = chdir('fixtures/recursive-extends');\n\tconst actual = await load();\n\tt.deepEqual(actual, {\n\t\textends: ['./first-extended'],\n\t\trules: {\n\t\t\tzero: 0,\n\t\t\tone: 1,\n\t\t\ttwo: 2\n\t\t}\n\t});\n});\n\ntest('parser preset overwrites completely instead of merging', async t => {\n\tt.context.back = chdir('fixtures/parser-preset-override');\n\tconst actual = await load();\n\n\tt.is(actual.parserPreset.name, './custom');\n\tt.is(typeof actual.parserPreset.opts, 'object');\n\tt.deepEqual(actual.parserPreset.opts, {\n\t\tb: 'b',\n\t\tparserOpts: {\n\t\t\theaderPattern: /.*/\n\t\t}\n\t});\n});\n\ntest('recursive extends with parserPreset', async t => {\n\tt.context.back = chdir('fixtures/recursive-parser-preset');\n\tconst actual = await load();\n\n\tt.is(actual.parserPreset.name, './conventional-changelog-custom');\n\tt.is(typeof actual.parserPreset.opts, 'object');\n\tt.deepEqual(actual.parserPreset.opts.parserOpts.headerPattern, /^(\\w*)(?:\\((.*)\\))?-(.*)$/);\n});\n\ntest('ignores unknow keys', async t => {\n\tt.context.back = chdir('fixtures/trash-file');\n\tconst actual = await load();\n\tt.deepEqual(actual, {\n\t\textends: [],\n\t\trules: {\n\t\t\tfoo: 'bar',\n\t\t\tbaz: 'bar'\n\t\t}\n\t});\n});\n\ntest('ignores unknow keys recursively', async t => {\n\tt.context.back = chdir('fixtures/trash-extend');\n\tconst actual = await load();\n\tt.deepEqual(actual, {\n\t\textends: ['./one'],\n\t\trules: {\n\t\t\tzero: 0,\n\t\t\tone: 1\n\t\t}\n\t});\n});\n\ntest('supports legacy .conventional-changelog-lintrc', async t => {\n\tt.context.back = chdir('fixtures/legacy');\n\tconst actual = await load();\n\tt.deepEqual(actual, {\n\t\textends: [],\n\t\trules: {\n\t\t\tlegacy: true\n\t\t}\n\t});\n});\n\ntest('commitlint.config.js overrides .conventional-changelog-lintrc', async t => {\n\tt.context.back = chdir('fixtures/overriden-legacy');\n\tconst actual = await load();\n\tt.deepEqual(actual, {\n\t\textends: [],\n\t\trules: {\n\t\t\tlegacy: false\n\t\t}\n\t});\n});\n\nfunction chdir(target) {\n\tconst to = path.resolve(cwd, target.split('/').join(path.sep));\n\tprocess.chdir(to);\n\treturn () => process.chdir(cwd);\n}\n"]}