{"version":3,"sources":["../src/load.js"],"names":["w","a","b","Array","isArray","undefined","valid","input","seed","raw","file","config","opts","extends","rules","parserPreset","resolvedParserPreset","process","cwd","name","path","posix","relative","split","sep","join","require","extended","prefix","dirname","preset","Promise","all","map","key","item","value","entry","executedValue","reduce","registry","executed","legacy","legacyFound","found","resolveable","console","warn","id","err"],"mappings":"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","file":"load.js","sourcesContent":["import path from 'path';\nimport importFrom from 'import-from';\nimport {entries, merge, mergeWith, pick} from 'lodash';\nimport rc from 'rc';\nimport resolveFrom from 'resolve-from';\n\nimport resolveExtends from './library/resolve-extends';\nimport executeRule from './library/execute-rule';\n\nconst w = (a, b) => (Array.isArray(b) ? b : undefined);\nconst valid = input => pick(input, 'extends', 'rules', 'parserPreset');\n\nexport default async (seed = {}) => {\n\t// Obtain config from .rc files\n\tconst raw = file();\n\n\t// Merge passed config with file based options\n\tconst config = valid(merge(raw, seed));\n\tconst opts = merge({extends: [], rules: {}}, pick(config, 'extends'));\n\n\t// Resolve parserPreset key\n\tif (typeof config.parserPreset === 'string') {\n\t\tconst resolvedParserPreset = resolveFrom(process.cwd(), config.parserPreset);\n\n\t\tconfig.parserPreset = {\n\t\t\tname: config.parserPreset,\n\t\t\tpath: `./${path.posix.relative(process.cwd(), resolvedParserPreset)}`.split(path.sep).join('/'),\n\t\t\topts: require(resolvedParserPreset)\n\t\t};\n\t}\n\n\t// Resolve extends key\n\tconst extended = resolveExtends(opts, {\n\t\tprefix: 'commitlint-config',\n\t\tcwd: raw.config ? path.dirname(raw.config) : process.cwd(),\n\t\tparserPreset: config.parserPreset\n\t});\n\n\tconst preset = valid(mergeWith(extended, config, w));\n\n\t// Await parser-preset if applicable\n\tif (typeof preset.parserPreset === 'object' && typeof preset.parserPreset.opts === 'object') {\n\t\tpreset.parserPreset.opts = await preset.parserPreset.opts;\n\t}\n\n\t// Execute rule config functions if needed\n\tconst executed = await Promise.all(\n\t\t['rules']\n\t\t\t.map(key => {\n\t\t\t\treturn [key, preset[key]];\n\t\t\t})\n\t\t\t.map(async item => {\n\t\t\t\tconst [key, value] = item;\n\t\t\t\tconst executedValue = await Promise.all(\n\t\t\t\t\tentries(value || {}).map(entry => executeRule(entry))\n\t\t\t\t);\n\t\t\t\treturn [\n\t\t\t\t\tkey,\n\t\t\t\t\texecutedValue.reduce((registry, item) => {\n\t\t\t\t\t\tconst [key, value] = item;\n\t\t\t\t\t\tregistry[key] = value;\n\t\t\t\t\t\treturn registry;\n\t\t\t\t\t}, {})\n\t\t\t\t];\n\t\t\t})\n\t);\n\n\t// Merge executed config keys into preset\n\treturn executed.reduce((registry, item) => {\n\t\tconst [key, value] = item;\n\t\tregistry[key] = value;\n\t\treturn registry;\n\t}, preset);\n};\n\nfunction file() {\n\tconst legacy = rc('conventional-changelog-lint');\n\tconst legacyFound = typeof legacy.config === 'string';\n\n\tconst found = resolveable('./commitlint.config');\n\tconst raw = found ? importFrom(process.cwd(), './commitlint.config') : {};\n\n\tif (legacyFound && !found) {\n\t\tconsole.warn(\n\t\t\t`Using legacy ${path.relative(\n\t\t\t\tprocess.cwd(),\n\t\t\t\tlegacy.config\n\t\t\t)}. Rename to commitlint.config.js to silence this warning.`\n\t\t);\n\t}\n\n\tif (legacyFound && found) {\n\t\tconsole.warn(\n\t\t\t`Ignored legacy ${path.relative(\n\t\t\t\tprocess.cwd(),\n\t\t\t\tlegacy.config\n\t\t\t)} as commitlint.config.js superseeds it. Remove .conventional-changelog-lintrc to silence this warning.`\n\t\t);\n\t}\n\n\tif (found) {\n\t\treturn raw;\n\t}\n\n\treturn legacy;\n}\n\nfunction resolveable(id) {\n\ttry {\n\t\tresolveFrom(process.cwd(), id);\n\t\treturn true;\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n"]}