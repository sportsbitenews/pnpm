'use strict';

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _hasAnsi = require('has-ansi');

var _hasAnsi2 = _interopRequireDefault(_hasAnsi);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _ansiStyles = require('ansi-styles');

var _lodash = require('lodash');

var _format17 = require('./format');

var _format18 = _interopRequireDefault(_format17);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ok = _chalk2.default.bold(`${_chalk2.default.green('✔')}   found 0 problems, 0 warnings`);

(0, _ava2.default)('does nothing without arguments', function (t) {
	var actual = (0, _format18.default)();
	t.deepEqual(actual, [ok]);
});

(0, _ava2.default)('does nothing without .errors and .warnings', function (t) {
	var actual = (0, _format18.default)({});
	t.deepEqual(actual, [ok]);
});

(0, _ava2.default)('returns empty summary of problems for empty .errors and .warnings', function (t) {
	var _format = (0, _format18.default)({
		errors: [],
		warnings: []
	}),
	    _format2 = (0, _slicedToArray3.default)(_format, 1),
	    msg = _format2[0];

	t.true(msg.includes('0 problems, 0 warnings'));
});

(0, _ava2.default)('returns a correct of empty .errors and .warnings', function (t) {
	var _format3 = (0, _format18.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}),
	    _format4 = (0, _slicedToArray3.default)(_format3, 3),
	    err = _format4[0],
	    prob = _format4[1],
	    msg = _format4[2];

	t.true((0, _lodash.includes)(err, 'There was an error'));
	t.true((0, _lodash.includes)(prob, 'There was a problem'));
	t.true((0, _lodash.includes)(msg, '1 problems, 1 warnings'));
});

(0, _ava2.default)('colors messages by default', function (t) {
	var _format5 = (0, _format18.default)({
		errors: [],
		warnings: []
	}),
	    _format6 = (0, _slicedToArray3.default)(_format5, 1),
	    msg = _format6[0];

	t.true((0, _hasAnsi2.default)(msg));
});

(0, _ava2.default)('does not color messages if configured', function (t) {
	var _format7 = (0, _format18.default)({}, { color: false }),
	    _format8 = (0, _slicedToArray3.default)(_format7, 1),
	    msg = _format8[0];

	t.false((0, _hasAnsi2.default)(msg));
});

(0, _ava2.default)('uses appropriate signs by default', function (t) {
	var _format9 = (0, _format18.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}),
	    _format10 = (0, _slicedToArray3.default)(_format9, 2),
	    err = _format10[0],
	    warn = _format10[1];

	t.true((0, _lodash.includes)(err, '✖'));
	t.true((0, _lodash.includes)(warn, '⚠'));
});

(0, _ava2.default)('uses signs as configured', function (t) {
	var _format11 = (0, _format18.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}, {
		signs: ['HNT', 'WRN', 'ERR']
	}),
	    _format12 = (0, _slicedToArray3.default)(_format11, 2),
	    err = _format12[0],
	    warn = _format12[1];

	t.true((0, _lodash.includes)(err, 'ERR'));
	t.true((0, _lodash.includes)(warn, 'WRN'));
});

(0, _ava2.default)('uses appropriate colors by default', function (t) {
	var _format13 = (0, _format18.default)({
		errors: [{
			level: 2,
			name: 'error-name',
			message: 'There was an error'
		}],
		warnings: [{
			level: 1,
			name: 'warning-name',
			message: 'There was a problem'
		}]
	}),
	    _format14 = (0, _slicedToArray3.default)(_format13, 2),
	    err = _format14[0],
	    warn = _format14[1];

	t.true((0, _lodash.includes)(err, _ansiStyles.red.open));
	t.true((0, _lodash.includes)(warn, _ansiStyles.yellow.open));
});

if (process.platform !== 'win32') {
	(0, _ava2.default)('uses colors as configured', function (t) {
		var _format15 = (0, _format18.default)({
			errors: [{
				level: 2,
				name: 'error-name',
				message: 'There was an error'
			}],
			warnings: [{
				level: 1,
				name: 'warning-name',
				message: 'There was a problem'
			}]
		}, {
			colors: ['white', 'magenta', 'blue']
		}),
		    _format16 = (0, _slicedToArray3.default)(_format15, 2),
		    err = _format16[0],
		    warn = _format16[1];

		t.true((0, _lodash.includes)(err, _ansiStyles.blue.open));
		t.true((0, _lodash.includes)(warn, _ansiStyles.magenta.open));
	});
}
//# sourceMappingURL=format.test.js.map