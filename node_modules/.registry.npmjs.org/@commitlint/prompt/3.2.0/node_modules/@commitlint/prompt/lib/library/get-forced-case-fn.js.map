{"version":3,"sources":["../../src/library/get-forced-case-fn.js"],"names":["getForcedCaseFn","rule","noop","input","lowerCase","String","prototype","toLowerCase","call","upperCase","toUpperCase","forcedCase"],"mappings":";;;;;kBAOwBA,e;;AAPxB;;;;;;AAEA;;;;;AAKe,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC7C,KAAMC,OAAO,SAAPA,IAAO;AAAA,SAASC,KAAT;AAAA,EAAb;AACA,KAAMC,YAAY,SAAZA,SAAY;AAAA,SAASC,OAAOC,SAAP,CAAiBC,WAAjB,CAA6BC,IAA7B,CAAkCL,KAAlC,CAAT;AAAA,EAAlB;AACA,KAAMM,YAAY,SAAZA,SAAY;AAAA,SAASJ,OAAOC,SAAP,CAAiBI,WAAjB,CAA6BF,IAA7B,CAAkCL,KAAlC,CAAT;AAAA,EAAlB;;AAEA,KAAI,CAACF,IAAL,EAAW;AACV,SAAOC,IAAP;AACA;;AAED,KAAMS,aAAa,6BAAcV,IAAd,CAAnB;;AAEA,KAAIU,eAAe,IAAnB,EAAyB;AACxB,SAAOT,IAAP;AACA;;AAED,QAAOS,eAAe,WAAf,GAA6BP,SAA7B,GAAyCK,SAAhD;AACA","file":"get-forced-case-fn.js","sourcesContent":["import getForcedCase from './get-forced-case';\n\n/**\n * Get forced case for rule\n * @param {object} rule to parse\n * @return {fn} transform function applying the enforced case\n */\nexport default function getForcedCaseFn(rule) {\n\tconst noop = input => input;\n\tconst lowerCase = input => String.prototype.toLowerCase.call(input);\n\tconst upperCase = input => String.prototype.toUpperCase.call(input);\n\n\tif (!rule) {\n\t\treturn noop;\n\t}\n\n\tconst forcedCase = getForcedCase(rule);\n\n\tif (forcedCase === null) {\n\t\treturn noop;\n\t}\n\n\treturn forcedCase === 'lowerCase' ? lowerCase : upperCase;\n}\n"]}