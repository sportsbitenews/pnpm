/// <reference types="node" />
import { IncomingMessage } from 'http';
export declare type UnpackProgress = (downloaded: number, totalSize: number) => void;
export declare type UnpackRemoteStreamOptions = {
    onStart?: () => void;
    onProgress?: UnpackProgress;
    shasum?: string;
    generateIntegrity?: boolean;
};
export declare function remote(stream: IncomingMessage, dest: string, opts: UnpackRemoteStreamOptions): Promise<{}>;
export declare type Index = {
    headers: {
        [filename: string]: {
            type: 'file';
            size: number;
            mtime: string;
        };
    };
    integrityPromise: Promise<{
        [filename: string]: {
            type: 'file';
            size: number;
            integrity: string;
            mtime: string;
        };
    }>;
};
export declare function local(stream: NodeJS.ReadableStream, dest: string, opts?: {
    generateIntegrity?: boolean;
}): Promise<{}>;
