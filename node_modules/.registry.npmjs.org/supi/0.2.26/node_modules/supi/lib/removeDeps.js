"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const loadJsonFile = require("load-json-file");
const writePkg = require("write-pkg");
const getSaveType_1 = require("./getSaveType");
function default_1(pkgJsonPath, removedPackages, saveType) {
    return __awaiter(this, void 0, void 0, function* () {
        const packageJson = yield loadJsonFile(pkgJsonPath);
        if (saveType) {
            packageJson[saveType] = packageJson[saveType];
            if (!packageJson[saveType])
                return packageJson;
            removedPackages.forEach(dependency => {
                delete packageJson[saveType][dependency];
            });
        }
        else {
            getSaveType_1.dependenciesTypes
                .filter(deptype => packageJson[deptype])
                .forEach(deptype => {
                removedPackages.forEach(dependency => {
                    delete packageJson[deptype][dependency];
                });
            });
        }
        yield writePkg(pkgJsonPath, packageJson);
        return packageJson;
    });
}
exports.default = default_1;
//# sourceMappingURL=removeDeps.js.map