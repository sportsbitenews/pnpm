import { InstalledPackage } from '../install/installMultiple';
import { TreeNode } from '../api/install';
import { Package } from '../types';
import { Store } from 'package-store';
import { DependencyTreeNodeMap } from './resolvePeers';
import { Shrinkwrap } from 'pnpm-shrinkwrap';
export default function (topPkgs: InstalledPackage[], rootNodeIds: string[], tree: {
    [nodeId: string]: TreeNode;
}, opts: {
    force: boolean;
    global: boolean;
    baseNodeModules: string;
    bin: string;
    topParents: {
        name: string;
        version: string;
    }[];
    shrinkwrap: Shrinkwrap;
    privateShrinkwrap: Shrinkwrap;
    makePartialPrivateShrinkwrap: boolean;
    production: boolean;
    optional: boolean;
    root: string;
    storePath: string;
    storeIndex: Store;
    skipped: Set<string>;
    pkg: Package;
    independentLeaves: boolean;
}): Promise<{
    linkedPkgsMap: DependencyTreeNodeMap;
    shrinkwrap: Shrinkwrap;
    privateShrinkwrap: Shrinkwrap;
    newPkgResolvedIds: string[];
}>;
