import { PackageContentInfo, Resolution, PackageSpec } from 'package-store';
import { InstallContext } from '../api/install';
import { Dependencies, ReadPackageHook } from '../types';
import { ResolvedDependencies } from 'pnpm-shrinkwrap';
export declare type PkgAddress = {
    nodeId: string;
    pkgId: string;
};
export declare type InstalledPackage = {
    id: string;
    resolution: Resolution;
    dev: boolean;
    optional: boolean;
    fetchingFiles: Promise<PackageContentInfo>;
    calculatingIntegrity: Promise<void>;
    path: string;
    specRaw: string;
    name: string;
    version: string;
    peerDependencies: Dependencies;
    optionalDependencies: Set<string>;
    hasBundledDependencies: boolean;
};
export default function installMultiple(ctx: InstallContext, specs: PackageSpec[], options: {
    keypath: string[];
    parentNodeId: string;
    currentDepth: number;
    resolvedDependencies?: ResolvedDependencies;
    preferedDependencies?: ResolvedDependencies;
    parentIsInstallable?: boolean;
    update: boolean;
    readPackageHook?: ReadPackageHook;
}): Promise<PkgAddress[]>;
